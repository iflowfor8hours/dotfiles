# also ctrl-s
set -g prefix2 C-s

# mouse
if-shell '[[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.1" | bc) -eq 1 ]]' \
    'set -g mouse on; bind m set -g mouse on \; display "Mouse ON"; bind M set -g mouse off \; display "Mouse OFF"' \
    'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on; bind m set -g mode-mouse on \; set -g mouse-resize-pane on \; set -g mouse-select-pane on \; set -g mouse-select-window on \; display "Mouse ON"; bind M set -g mode-mouse off \; set -g mouse-resize-pane off \; set -g mouse-select-pane off \; set -g mouse-select-window off \; display "Mouse OFF"'

# Make tmux act like xterm to prevent Vim issues:
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'


# Only resize the screen size if the smaller screen user has their window
setw -g aggressive-resize on

# Store a lot of history.
set -g history-limit 100000

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# prefix -> back-one-character
set -g prefix None
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# Shut up.
# set -g quiet on

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# no bind and change panes
# bind -n C-k run-shell 'tmux-vim-select-pane -U'
# bind -n C-j run-shell 'tmux-vim-select-pane -D'
# bind -n C-h run-shell 'tmux-vim-select-pane -L'
# bind -n C-l run-shell 'tmux-vim-select-pane -R'

# Reload the config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Use Vim movement key mappings for switching around between panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Vim movement key mappings (uppercase) for resizing panes.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# zoom with x
bind -r x resize-pane -Z

# change sessions
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Saner splitting.
bind e split-window -h -c '#{pane_current_path}'
bind o split-window -v -c '#{pane_current_path}'
bind S choose-session

# 256 colors please
set -g default-terminal "screen-256color"

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window
bind , command-prompt "rename-window '%%'"
bind > run-shell "tmux rename-window `basename #{pane_current_path}`"

# Copy mode
# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
setw -g mode-keys vi
bind ` copy-mode
bind P paste-buffer
bind p paste-buffer

# Toggle synchronized panes for the current window
#bind S set synchronize-panes

##### APPEARANCE
# Use Solarized colorscheme.
#set -g status-bg black #base02
#set -g status-fg yellow #yellow
#set -g status-attr default
#
## Default window title colors.
#setw -g window-status-fg brightblue #base0
#setw -g window-status-bg default
#setw -g window-status-current-fg brightred #orange
#setw -g window-status-current-bg default
#
## Pane border.
#set -g pane-border-fg black #base02
#set -g pane-active-border-fg brightgreen #base01
#
## Message text.
#set -g message-bg black #base02
#set -g message-fg brightred #orange
#
## Pane number display.
#set -g display-panes-active-colour blue #blue
#set -g display-panes-colour brightred #orange

## Custom status bar
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=colour16,bg=colour254,bold] #S '

set -g status-right "%d %b #[fg=colour254,bg=colour234,nobold]#[fg=colour16,bg=colour254,bold] #(date +%%H:%%M) "

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I #W #[fg=colour39,bg=colour234,nobold]"

# Center the window list
set -g status-justify centre
